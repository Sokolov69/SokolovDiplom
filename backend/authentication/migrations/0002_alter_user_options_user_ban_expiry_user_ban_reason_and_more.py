# Generated by Django 5.1.7 on 2025-04-23 20:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'Пользователь', 'verbose_name_plural': 'Пользователи'},
        ),
        migrations.AddField(
            model_name='user',
            name='ban_expiry',
            field=models.DateTimeField(blank=True, help_text='Дата окончания блокировки (пусто для бессрочной)', null=True, verbose_name='Окончание блокировки'),
        ),
        migrations.AddField(
            model_name='user',
            name='ban_reason',
            field=models.TextField(blank=True, help_text='Причина блокировки пользователя', null=True, verbose_name='Причина блокировки'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_banned',
            field=models.BooleanField(default=False, help_text='Заблокирован ли пользователь', verbose_name='Заблокирован'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_activity',
            field=models.DateTimeField(blank=True, help_text='Дата и время последней активности пользователя', null=True, verbose_name='Последняя активность'),
        ),
        migrations.AlterField(
            model_name='user',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='user',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Дата обновления'),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название роли', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Описание роли и её полномочий', null=True, verbose_name='Описание')),
                ('is_staff_role', models.BooleanField(default=False, help_text='Предоставляет ли роль доступ к админ-панели', verbose_name='Роль персонала')),
                ('is_moderator_role', models.BooleanField(default=False, help_text='Предоставляет ли роль доступ к инструментам модерации', verbose_name='Роль модератора')),
                ('is_superuser_role', models.BooleanField(default=False, help_text='Предоставляет ли роль полный доступ к системе', verbose_name='Роль суперпользователя')),
                ('priority', models.PositiveSmallIntegerField(default=0, help_text='Приоритет роли (выше число - выше приоритет)', verbose_name='Приоритет')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('permissions', models.ManyToManyField(blank=True, help_text='Права доступа, предоставляемые этой ролью', related_name='roles', to='auth.permission', verbose_name='Права доступа')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
                'db_table': 'roles',
                'ordering': ['-priority'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, help_text='Роли пользователя в системе', related_name='users', to='authentication.role', verbose_name='Роли'),
        ),
        migrations.CreateModel(
            name='UserActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('action_type', models.CharField(choices=[('user_ban', 'Блокировка пользователя'), ('user_unban', 'Разблокировка пользователя'), ('user_role_add', 'Добавление роли пользователю'), ('user_role_remove', 'Удаление роли у пользователя'), ('content_approve', 'Одобрение контента'), ('content_reject', 'Отклонение контента'), ('report_resolve', 'Обработка жалобы'), ('system_change', 'Изменение настроек системы'), ('other', 'Другое')], help_text='Тип выполненного действия', max_length=50, verbose_name='Тип действия')),
                ('description', models.TextField(help_text='Подробное описание действия', verbose_name='Описание')),
                ('entity_type', models.CharField(blank=True, help_text='Тип сущности, над которой выполнено действие', max_length=100, null=True, verbose_name='Тип сущности')),
                ('entity_id', models.PositiveIntegerField(blank=True, help_text='ID сущности, над которой выполнено действие', null=True, verbose_name='ID сущности')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP-адрес, с которого выполнено действие', null=True, verbose_name='IP-адрес')),
                ('target_user', models.ForeignKey(blank=True, help_text='Пользователь, над которым выполнено действие (если применимо)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='targeted_logs', to=settings.AUTH_USER_MODEL, verbose_name='Целевой пользователь')),
                ('user', models.ForeignKey(help_text='Пользователь, выполнивший действие', on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог действий пользователя',
                'verbose_name_plural': 'Логи действий пользователей',
                'db_table': 'user_action_logs',
                'ordering': ['-created_at'],
            },
        ),
    ]
