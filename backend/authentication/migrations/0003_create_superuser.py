# Generated by Django 5.1.7 on 2025-04-23 21:43

from django.db import migrations
from django.contrib.auth.hashers import make_password

def create_superuser(apps, schema_editor):
    # Получаем модель User и Role из состояния миграции
    User = apps.get_model('authentication', 'User')
    Role = apps.get_model('authentication', 'Role')
    
    # Создаем роль суперпользователя, если её ещё нет
    admin_role, created = Role.objects.get_or_create(
        name='Администратор',
        defaults={
            'description': 'Роль с полными правами доступа',
            'is_staff_role': True,
            'is_moderator_role': True,
            'is_superuser_role': True,
            'priority': 100
        }
    )
    
    # Проверяем, существует ли уже пользователь с логином 'root'
    if not User.objects.filter(username='root').exists():
        # Создаем суперпользователя
        user = User.objects.create(
            username='root',
            password=make_password('147852369'),  # Хешируем пароль
            is_staff=True,
            is_superuser=True,
            is_active=True,
            email='root@example.com'
        )
        # Добавляем роль администратора
        user.roles.add(admin_role)

def reverse_migrations(apps, schema_editor):
    # Отменяем изменения, удаляя созданного пользователя
    User = apps.get_model('authentication', 'User')
    Role = apps.get_model('authentication', 'Role')
    
    User.objects.filter(username='root').delete()
    Role.objects.filter(name='Администратор').delete()

class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0002_alter_user_options_user_ban_expiry_user_ban_reason_and_more'),
    ]

    operations = [
        migrations.RunPython(create_superuser, reverse_migrations),
    ]
