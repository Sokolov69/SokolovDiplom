# Generated by Django 5.1.7 on 2025-04-23 20:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('title', models.CharField(help_text="Название для адреса (например, 'Дом', 'Работа')", max_length=100, verbose_name='Название')),
                ('address', models.CharField(help_text='Полный адрес', max_length=255, verbose_name='Адрес')),
                ('city', models.CharField(help_text='Название города', max_length=100, verbose_name='Город')),
                ('region', models.CharField(blank=True, help_text='Регион/область', max_length=100, null=True, verbose_name='Регион')),
                ('postal_code', models.CharField(blank=True, help_text='Почтовый индекс', max_length=20, null=True, verbose_name='Почтовый индекс')),
                ('country', models.CharField(default='Россия', help_text='Название страны', max_length=100, verbose_name='Страна')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Географическая широта для геолокации', max_digits=9, null=True, verbose_name='Широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Географическая долгота для геолокации', max_digits=9, null=True, verbose_name='Долгота')),
                ('is_primary', models.BooleanField(default=False, help_text='Является ли адрес основным', verbose_name='Основной адрес')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('max_distance', models.PositiveIntegerField(default=50, help_text='Максимальное расстояние для поиска в километрах', verbose_name='Максимальное расстояние')),
                ('notification_enabled', models.BooleanField(default=True, help_text='Включить или отключить все уведомления', verbose_name='Уведомления включены')),
                ('email_notifications', models.BooleanField(default=True, help_text='Получать уведомления по email', verbose_name='Email уведомления')),
                ('push_notifications', models.BooleanField(default=True, help_text='Получать push-уведомления', verbose_name='Push уведомления')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Предпочтение пользователя',
                'verbose_name_plural': 'Предпочтения пользователей',
                'db_table': 'user_preferences',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('avatar', models.ImageField(blank=True, help_text='Изображение профиля пользователя', null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('bio', models.TextField(blank=True, help_text='Краткая информация о пользователе', null=True, verbose_name='О себе')),
                ('phone_number', models.CharField(blank=True, help_text='Контактный номер телефона', max_length=20, null=True, verbose_name='Номер телефона')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Рейтинг пользователя по шкале от 0 до 5', max_digits=3, verbose_name='Рейтинг')),
                ('total_reviews', models.PositiveIntegerField(default=0, help_text='Общее количество полученных отзывов', verbose_name='Всего отзывов')),
                ('successful_trades', models.PositiveIntegerField(default=0, help_text='Количество успешно завершенных обменов', verbose_name='Успешных обменов')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
                'db_table': 'user_profiles',
            },
        ),
    ]
