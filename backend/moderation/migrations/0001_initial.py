# Generated by Django 5.1.7 on 2025-04-23 20:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название причины блокировки', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Подробное описание причины', null=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, help_text='Доступна ли причина для выбора', verbose_name='Активна')),
                ('suggested_duration_days', models.PositiveIntegerField(default=0, help_text='Рекомендуемый срок блокировки в днях (0 - бессрочно)', verbose_name='Рекомендуемый срок (дни)')),
            ],
            options={
                'verbose_name': 'Причина блокировки',
                'verbose_name_plural': 'Причины блокировок',
                'db_table': 'block_reasons',
            },
        ),
        migrations.CreateModel(
            name='ModeratorPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('review_items', 'Модерация предметов'), ('review_profiles', 'Модерация профилей'), ('review_reviews', 'Модерация отзывов'), ('review_reports', 'Обработка жалоб'), ('ban_users', 'Блокировка пользователей'), ('delete_content', 'Удаление контента'), ('edit_content', 'Редактирование контента')], help_text='Тип права доступа для модераторов', max_length=50, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Описание права доступа', null=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, help_text='Активно ли право доступа в системе', verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Право модератора',
                'verbose_name_plural': 'Права модераторов',
                'db_table': 'moderator_permissions',
            },
        ),
        migrations.CreateModel(
            name='ReportReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название причины жалобы', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Подробное описание причины', null=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, help_text='Доступна ли причина для выбора', verbose_name='Активна')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Порядок отображения в списке', verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Причина жалобы',
                'verbose_name_plural': 'Причины жалоб',
                'db_table': 'report_reasons',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ModeratorRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название роли модератора', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Описание роли модератора', null=True, verbose_name='Описание')),
                ('priority', models.PositiveSmallIntegerField(default=0, help_text='Приоритет роли (выше число - выше приоритет)', verbose_name='Приоритет')),
                ('is_active', models.BooleanField(default=True, help_text='Активна ли роль модератора', verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('permissions', models.ManyToManyField(help_text='Права доступа, предоставляемые ролью', related_name='roles', to='moderation.moderatorpermission', verbose_name='Права доступа')),
            ],
            options={
                'verbose_name': 'Роль модератора',
                'verbose_name_plural': 'Роли модераторов',
                'db_table': 'moderator_roles',
                'ordering': ['-priority'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('entity_type', models.CharField(help_text='Тип сущности (Item, User, Review и т.д.)', max_length=100, verbose_name='Тип сущности')),
                ('entity_id', models.PositiveIntegerField(help_text='ID сущности, на которую подана жалоба', verbose_name='ID сущности')),
                ('description', models.TextField(help_text='Подробное описание проблемы', verbose_name='Описание')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('in_progress', 'В работе'), ('resolved', 'Разрешена'), ('rejected', 'Отклонена')], default='pending', help_text='Текущий статус жалобы', max_length=20, verbose_name='Статус')),
                ('resolution_note', models.TextField(blank=True, help_text='Примечание по результатам обработки жалобы', null=True, verbose_name='Примечание')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='Дата обработки жалобы', null=True, verbose_name='Дата обработки')),
                ('reporter', models.ForeignKey(help_text='Пользователь, отправивший жалобу', on_delete=django.db.models.deletion.CASCADE, related_name='submitted_reports', to=settings.AUTH_USER_MODEL, verbose_name='Отправитель')),
                ('resolved_by', models.ForeignKey(blank=True, help_text='Модератор, обработавший жалобу', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL, verbose_name='Обработал')),
                ('reason', models.ForeignKey(help_text='Причина жалобы', on_delete=django.db.models.deletion.PROTECT, related_name='reports', to='moderation.reportreason', verbose_name='Причина')),
            ],
            options={
                'verbose_name': 'Жалоба',
                'verbose_name_plural': 'Жалобы',
                'db_table': 'reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('comment', models.TextField(blank=True, help_text='Внутренний комментарий о блокировке', null=True, verbose_name='Комментарий')),
                ('message_for_user', models.TextField(blank=True, help_text='Сообщение, которое будет показано пользователю', null=True, verbose_name='Сообщение пользователю')),
                ('end_date', models.DateTimeField(blank=True, help_text='Дата окончания блокировки (пусто для бессрочной)', null=True, verbose_name='Дата окончания')),
                ('is_active', models.BooleanField(default=True, help_text='Активна ли блокировка', verbose_name='Активна')),
                ('blocked_by', models.ForeignKey(help_text='Модератор, выполнивший блокировку', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_users', to=settings.AUTH_USER_MODEL, verbose_name='Заблокировал')),
                ('reason', models.ForeignKey(help_text='Причина блокировки', on_delete=django.db.models.deletion.PROTECT, related_name='user_blocks', to='moderation.blockreason', verbose_name='Причина')),
                ('related_report', models.ForeignKey(blank=True, help_text='Жалоба, в результате которой была выполнена блокировка', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resulting_blocks', to='moderation.report', verbose_name='Связанная жалоба')),
                ('user', models.ForeignKey(help_text='Заблокированный пользователь', on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Блокировка пользователя',
                'verbose_name_plural': 'Блокировки пользователей',
                'db_table': 'user_blocks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModeratedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('entity_type', models.CharField(help_text='Тип модерируемой сущности', max_length=100, verbose_name='Тип сущности')),
                ('entity_id', models.PositiveIntegerField(help_text='ID модерируемой сущности', verbose_name='ID сущности')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('approved', 'Одобрено'), ('rejected', 'Отклонено'), ('auto_approved', 'Авто-одобрено')], default='pending', help_text='Статус модерации', max_length=20, verbose_name='Статус')),
                ('moderated_at', models.DateTimeField(blank=True, help_text='Дата проведения модерации', null=True, verbose_name='Дата модерации')),
                ('note', models.TextField(blank=True, help_text='Примечание модератора', null=True, verbose_name='Примечание')),
                ('rejection_reason', models.CharField(blank=True, help_text='Причина отклонения контента', max_length=255, null=True, verbose_name='Причина отклонения')),
                ('moderated_by', models.ForeignKey(blank=True, help_text='Модератор, обработавший содержимое', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_content', to=settings.AUTH_USER_MODEL, verbose_name='Модератор')),
            ],
            options={
                'verbose_name': 'Модерируемый контент',
                'verbose_name_plural': 'Модерируемый контент',
                'db_table': 'moderated_content',
                'ordering': ['-created_at'],
                'unique_together': {('entity_type', 'entity_id')},
            },
        ),
        migrations.CreateModel(
            name='ModeratorAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('content_type', models.CharField(blank=True, help_text='Тип контента для модерации (items, reviews, profiles и т.д.)', max_length=100, null=True, verbose_name='Тип контента')),
                ('is_active', models.BooleanField(default=True, help_text='Активно ли назначение', verbose_name='Активно')),
                ('assigned_by', models.ForeignKey(help_text='Администратор, назначивший модератора', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderator_appointments', to=settings.AUTH_USER_MODEL, verbose_name='Назначил')),
                ('category', models.ForeignKey(blank=True, help_text='Категория, которую модерирует пользователь (если применимо)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderators', to='categories.category', verbose_name='Категория')),
                ('user', models.ForeignKey(help_text='Пользователь, назначенный модератором', on_delete=django.db.models.deletion.CASCADE, related_name='moderator_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Модератор')),
                ('role', models.ForeignKey(help_text='Роль модератора с определенными правами', on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='moderation.moderatorrole', verbose_name='Роль модератора')),
            ],
            options={
                'verbose_name': 'Назначение модератора',
                'verbose_name_plural': 'Назначения модераторов',
                'db_table': 'moderator_assignments',
                'unique_together': {('user', 'category'), ('user', 'content_type')},
            },
        ),
    ]
